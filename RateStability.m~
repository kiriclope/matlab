function RateStability(nbpop,K)
    
    Iext = ExternalInput(model,nbpop,dir) ;
    J = ImportJab(model,nbpop,dir) ;
    
    Tr = zeros(1,nbpop) ;
    Tr(1) = 20 ;
    Tr(2:nbpop) = 10 ;
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %% MF limit
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    function Eq = SteadyState(r)
        h = zeros(1,nbpop) ;
        Eq = [] ;
        for i=1:nbpop
            h(i) = Iext(i) ; 
            for j=1:nbpop
                h(i) = h(i) + J(i,j) * r(j) ; 
            end
            Eq = [Eq ; r(i) - F( sqrt(K) * h(i) ) ] ; 
        end
    end

    function M = linEq(r)
        for i=1:nbpop
            h(i) = Iext(i) ;
            for j=1:nbpop
                h(i) = h(i) + J(i,j) * r(j) ;
            end
        end
        
        M = zeros(nbpop,nbpop) ;
        
        for i=1:nbpop
            M(i,i) = -1/Tr(i) ;
            for j=1:nbpop
                M(i,j) = dF( sqrt(K) * h(i) ) * sqrt(K) * J(i,j) ; 
            end
        end
    end
    
    function out = F(x) 
        a = 1.5 ;
        out = a * log( 1 + exp(x/a) ) ;
    end
    
    function out = dF(x)
        a = 1.5 ;
        out = exp(x/a) / ( 1 + exp(x/a) ) ;
    end

end    