function [lbd r x] = STP_Stab(u,r0)

    nbpop = 1 ; 
    dir = 'Test' ;
    J = ImportJab('STP',nbpop,dir,0) ;
    Iext = ExternalInput('STP',nbpop,dir) ;

    switch nbpop

      case 1
        Tau = 20 ;
        Trec = 20;
        Tfac = 1500 ;
        U = 0.3 ;
        Iext = r0 ;
        J = 10 ;

      case 2
        Tau = [20 10] ;
        Trec = [20 0] ;
        Tfac = [1500 0] ;
        U = [.03 1] ;

    end
    
    % options = optimset('Display','off') ;
    % E = fsolve(@SteadyState,E0,options) ;
    % x = 1 / ( 1 + Td * u * E ) ;
    
    % fprintf('E %.3f x %.3f \n', E, x) ;

    % M = linEq(u,x,E) ;
    % lbd = eig(M) ;

    % fprintf('lbd ')
    % for i=1:2 
    %     fprintf('%.3f +i %.3f | ', real(lbd(i)), imag(lbd(i)) ) ; 
    % end
    % fprintf('\n') ;
    
    % function Eq = SteadyState(E) 
    %     Eq = E - F( J * u * E / ( 1 + Td * u * E ) + E0 )  ;
    % end

    % function M = linEq(u,x,E) 
    %     h = J * u * x * E + E0 ;
    %     M = [ -1 + J * u * x * dF(h) / Tau , J * u * E * dF(h) / Tau ; - u * x , -1/Td - u * E ] ;
    % end
     

    options = optimset('Display','off') ;
    r = fsolve(@SteadyState,r0,options) ;
    for i=1:nbpop
        x(i) = 1 / ( 1 + Trec(i) * u(i) * r(i) ) ;
    end

    fprintf('Rates ') ;
    fprintf('%.3f ', r) ;
    fprintf('\n') ;
    fprintf('x ') ;
    fprintf('%.3f ', x) ;
    fprintf('\n') ;


    M = linEq(u,x,r) ;
    lbd = eig(M) ;

    fprintf('lbd ')
    for i=1:2*nbpop
        fprintf('%.3f +i %.3f | ', real(lbd(i)), imag(lbd(i)) ) ; 
    end
    fprintf('\n') ;

    function Eq = SteadyState(r)
        Eq = [] ;
        for i=1:nbpop
            h(i) = Iext(i) ;
            for j=1:nbpop
                h(i) = h(i) + J(i,j) * u(j) * r(j) / ( 1 + Trec(j) * u(j) * r(j) ) ;
            end
            Eq = [Eq ; r(i) - F( h(i) ) ] ;
        end
    end
    
    function M = linEq(u,x,r)

        for i=1:nbpop
            h(i) = Iext(i) ;
            for j=1:nbpop
                h(i) = h(i) + J(i,j) * u(j) * x(j) * r(j) ; 
            end
        end

        M = zeros(2*nbpop,2*nbpop) ;

        for i=1:nbpop
            M(i,i) = -1 / Tau(i) ;
            M(i+nbpop,i+nbpop) = -1 / Trec(i) ;
            for j=1:nbpop
                M(i,j) = M(i,j) + dF(h(i)) * J(i,j) * u(j) * x(j) / Tau(i) ;
                M(i,j+nbpop) = M(i,j+nbpop) + dF(h(i)) * J(i,j) * u(j) * r(j) ;
                M(i+nbpop,j) = - u(i) * x(i)  ;
                M(i+nbpop,j+nbpop) =  M(i+nbpop,j+nbpop) - u(i) * r(i) ;
            end
        end
        
    end

    function out = Phi(x)
        out = .5*( 1 + erf( x/sqrt(2) ) ) ;
    end
    
    function out = dPhi(x)
        out = exp(-x.^2) / sqrt(2 * pi) ;
    end

    function out = F(x) 
        a = 1.5 ;
        out = a * log( 1 + exp(x/a) ) ;
    end

    function out = dF(x)
        a = 1.5 ;
        out = exp(x/a) / ( 1 + exp(x/a) ) ;
    end

end